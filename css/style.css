body{
  background-color: #1e202b;
  color: #bfc1c8;;
}
.navbar-toggler {
  background-color: white;

}
.navbar
{
 
  padding: 40px !important;
}
.navbar a{
  color: white !important;
}
.navbar-brand{
  font-size: 12px;
}

.navbar-brand p{
  padding-bottom: 0px;
    font-size: 1.1428571429em;
    color: white;
}
.navbar-brand span{
  font-size: 0.7142857143em;
  display: block;
  color: #bfc1c8;
}
.nav-link{
  padding: 0px 25px !important;
  margin-right: 10px;
  transition: all 0.6s;
  -webkit-transition: all 0.6s;
  -moz-transition: all 0.6s;
  -ms-transition: all 0.6s;
  -o-transition: all 0.6s;
}
.navbar-nav .active{
  padding: 0px 25px !important;
    border: 2px solid transparent;
    border-radius: 30px;
    border-color: #009ad8;
    color: #009ad8 !important;
}
.nav-link:hover{
  padding: 0px 25px !important;
    border: 2px solid transparent;
    border-radius: 30px;
    border-color: #009ad8;
    color: #009ad8 !important;
}

.home{
  background-image: url(../images/banner.png);
  background-position: center center;
  background-size: cover;
  padding: 70px 0;
  min-height: 350px;
}
.find-location input[type="text"] {
  width: 100%;
  padding: 20px 50px 20px 20px;
  background: #1e202b;
  color: white;
  border-color: #1e202b;
}
.find-location input::placeholder{
  color: rgb(139, 137, 137) !important;
}
.find-location .submit-btn{
position: absolute;
top: 12%;
right: 1%;
padding: 10px 40px;
color: white;
background-color: #009ad8;
}

.forecast-table{
  color: white;
}
.table-header{
  background: rgba(0, 0, 0, 0.1);
  padding: 10px;
  text-align: center;
  font-weight: 400;
}
.weatherTable{
  position: relative;
  top: -120px;
}
.weatherTable  .current-day{
background-color: #323544;
border-top-left-radius: 10px;
border-bottom-left-radius: 10px;
}
@media only screen and (max-width: 767px) {
  .weatherTable  .current-day{
    border-bottom-left-radius: 0px;
    border-top-right-radius: 10px;
    }
}
/* 767 */
.weatherTable .second-day{
  background-color:#262936;
  text-align: center;
}
.weatherTable .second-day .num1 , .weatherTable .therid-day .num1{
  font-size: 1.7142857143em;
  color: white;
  font-weight: 700;
}
.weatherTable .therid-day{
  background-color:#323544;
  border-top-right-radius: 10px;
 border-bottom-right-radius: 10px;
text-align: center;
}
@media only screen and (max-width: 767px) {
  .weatherTable  .therid-day{
    border-top-right-radius: 0px;
    border-bottom-left-radius: 10px;
    }
}

.table-content{
padding: 10px 20px;
}
.table-content .location{
  font-size: 1.2857142857em;
    font-weight: 400;
}
.table-content .degree{
  font-size: 60px;
  color: white;
  font-weight: 700;
}

 .custom{
  color: #009ad8 ;
}
footer{
  background: #262936;
    padding: 50px 0;
}
.site-footer .social-links a {
  width: 40px;
  height: 40px;
  display: inline-block;
  border-radius: 50%;
  background: #1e202b;
  color: #009ad8 ;
  text-align: center;
  line-height: 2;
  -webkit-transition: 0.3s ease;
  transition: 0.3s ease;
  font-size: 20px;
}
.site-footer .social-links a:hover{
  background: #009ad8;
  color: white;
}
/* 
 let createSpanArea = document.createElement("span");
  let createImgIcon1 = document.createElement("img");
  let createImgIcon2 = document.createElement("img");
  let createImgIcon3 = document.createElement("img");
  let creatTextArea = document.createTextNode(apiJson.location.name);
  let creatTextDay1Num = document.createTextNode(apiJson.current.temp_c);
  let creatTextDay2Num1 = document.createTextNode(
    apiJson.forecast.forecastday[1].day.maxtemp_c
  );
  let creatTextDay2Num2 = document.createTextNode(
    apiJson.forecast.forecastday[1].day.mintemp_c
  );
  let creatTextDay3Num1 = document.createTextNode(
    apiJson.forecast.forecastday[2].day.maxtemp_c
  );
  let creatTextDay3Num2 = document.createTextNode(
    apiJson.forecast.forecastday[2].day.mintemp_c
  );
  let createTextCustomDay1 = document.createTextNode(
    apiJson.current.condition.text
  );
  let createTextCustomDay2 = document.createTextNode(
    apiJson.forecast.forecastday[1].day.condition.text
  );
  let createTextCustomDay3 = document.createTextNode(
    apiJson.forecast.forecastday[2].day.condition.text
  );

  createSpanArea.append(creatTextArea);
  createImgIcon1.setAttribute("src", apiJson.current.condition.icon);
  createImgIcon2.setAttribute(
    "src",
    apiJson.forecast.forecastday[1].day.condition.icon
  );
  createImgIcon3.setAttribute(
    "src",
    apiJson.forecast.forecastday[2].day.condition.icon
  );

  console.log(creatTextDay1Num);
  area.innerHTML = createSpanArea.innerHTML;
  day1Num.innerHTML = creatTextDay1Num;
  day2Num1.innerHTML = creatTextDay2Num1.innerHTML;
  day2Num2.innerHTML = creatTextDay2Num2.innerHTML;
  day3Num1.innerHTML = creatTextDay3Num1.innerHTML;
  day3Num2.innerHTML = creatTextDay3Num2.innerHTML;
  icon1.innerHTML = createImgIcon1.innerHTML;
  icon2.innerHTML = createImgIcon2.innerHTML;
  icon3.innerHTML = createImgIcon3.innerHTML;
  customDay1.innerHTML = createTextCustomDay1.innerHTML;
  customDay2.innerHTML = createTextCustomDay2.innerHTML;
  customDay3.innerHTML = createTextCustomDay3.innerHTML;
  console.log(creatTextDay1Num.); */